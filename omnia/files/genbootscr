#!/bin/bash

if [ -n "${1}" ]; then
  ROOT="$1"
else
  ROOT=`mount | egrep "^[^ ]+ on / type" | sed -r 's/^([^ ]+) on \/ type .*/\1/'`
fi
echo "Root device: ${ROOT}"

SCRIPT_PREPEND=""
if echo $ROOT | grep "/dev/sd" >/dev/null; then
  BOOTDEV="scsi 0"
  SCRIPT_PREPEND="scsi scan;"
else
  ROOT="b301"
  BOOTDEV="mmc 0"
fi

KERNEL_IMAGE=`find /boot/ -name "vmlinuz-*" | sort --version-sort | tail -n1`
if [ ! -f "${KERNEL_IMAGE}" ]; then
  echo "Kernel image not found. Exit."
  exit -1
fi

KERNEL_VER=`echo $KERNEL_IMAGE | sed -r 's%^.*/vmlinuz-(.*)$%\1%'`
if [ -z "${KERNEL_VER}" ]; then
  echo "Kernel version not recognized. Exit."
  exit -1
fi

INITRD="/boot/initrd.img-${KERNEL_VER}"

DTPHY="/usr/lib/linux-image-${KERNEL_VER}/armada-385-turris-omnia-phy.dtb"
DTSFP="/usr/lib/linux-image-${KERNEL_VER}/armada-385-turris-omnia-sfp.dtb"
if [ ! -f "${DTPHY}" ]; then
  DTPHY="/boot/armada-385-turris-omnia-phy.dtb"
fi
if [ ! -f "${DTSFP}" ]; then
  DTSFP="/boot/armada-385-turris-omnia-sfp.dtb"
fi

echo "Kernel Image: $KERNEL_IMAGE"
echo "InitRD: $INITRD"

cat >/boot/boot.txt <<EOF
setenv bootargs "earlyprintk console=\$console pcie_aspm=off root=$ROOT rootdelay=2 rootflags=subvol=@,commit=5 rw"
setenv omnia_boot_prep '${SCRIPT_PREPEND}'
setenv omnia_boot_lk 'load $BOOTDEV \${kernel_addr_r} /@${KERNEL_IMAGE}'
setenv omnia_boot_ldt_phy 'load $BOOTDEV \${fdt_addr_r} /@$DTPHY'
setenv omnia_boot_ldt_sfp 'load $BOOTDEV \${fdt_addr_r} /@$DTSFP'
setenv omnia_fixup_mac0 'setexpr fmac0 gsub : " " \$ethaddr; fdt resize; fdt set /soc/internal-regs/ethernet@70000 local-mac-address "[\${fmac0}]"'
setenv omnia_fixup_mac1 'setexpr fmac1 gsub : " " \$eth1addr; fdt resize; fdt set /soc/internal-regs/ethernet@30000 local-mac-address "[\${fmac1}]"'
setenv omnia_fixup_mac2 'setexpr fmac2 gsub : " " \$eth2addr; fdt resize; fdt set /soc/internal-regs/ethernet@34000 local-mac-address "[\${fmac2}]"'
EOF

if [ -f "${INITRD}" ]; then
cat >>/boot/boot.txt <<EOF
setenv omnia_boot_lrd 'load $BOOTDEV \${ramdisk_addr_r} /@${INITRD}'
setenv omnia_boot_brd 'bootz \${kernel_addr_r} \${ramdisk_addr_r}:0x\${filesize} \${fdt_addr_r};'
setenv omnia_boot 'run omnia_boot_prep; run omnia_boot_lk; if gpio input gpio@71_4; then echo SFP; run omnia_boot_ldt_sfp; else echo PHY; run omnia_boot_ldt_phy; fi; fdt addr \${fdt_addr_r}; run omnia_fixup_mac0; run omnia_fixup_mac1; run omnia_fixup_mac2; run omnia_boot_lrd; run omnia_boot_brd'
run omnia_boot
EOF
else
cat >>/boot/boot.txt <<EOF
setenv omnia_boot_b 'bootz \${kernel_addr_r} - \${fdt_addr_r};'
setenv omnia_boot 'run omnia_boot_prep; run omnia_boot_lk; if gpio input gpio@71_4; then echo SFP; run omnia_boot_ldt_sfp; else echo PHY; run omnia_boot_ldt_phy; fi; fdt addr \${fdt_addr_r}; run omnia_fixup_mac0; run omnia_fixup_mac1; run omnia_fixup_mac2; run omnia_boot_b;'
run omnia_boot
EOF
fi

rm -f /boot/boot.scr
mkimage -T script -C none -n boot -d /boot/boot.txt /boot/boot.scr

